1 + 1
1 : 4
1:30
sin(1)
q()
1 + InF
1/0
1 + Inf
Inf - Inf
1:30
(1:30) * 2
x <- 1:30
sin(x)
X
x
sin(x)[3]
sin(3)
x[3]
x[ -3 ]
x[ sqrt(x) < 8]
x[ sqrt(x) < 3]
y <- x[ sqrt(x) < 3]
y
help(sin)
help(Sin)
?sin
help(y)
y
str(y)
str(x)
e^10
exp(1)
?exp
log(4,2)
log(4,10)
log(4)
s <- sin((1:10)/10)
plot(s)
s
plot(s, s^2)
plot(s)
(1:2)*(1:6)1.2
xsimul <- runif(100)
hist(xsimul)
xsimul <- runif(100)
hist(xsimul)
par(mfrow=c(2,2))
hist(xsimul)
rnorm(100)
hist(rnorm(100))
runif(max=13,min=10, nn=10)
runif(max=13,min=10, n=10)
plot(x)
n <- 100#
x <- runif(n)
plot(x)
plot(sin(1:100))
plot(sort(x), (1:n)/n)
n <- 100#
x <- runif(n)#
#
plot(sort(x), (1:n)/n)
plotecdf <- function(x){#
	plot(sort(x), (1:length(x))/length(x))#
#
}
plotecdf(rnorm(100))
plotecdf(runif(100))
abline(0,1)
plotecdf(runif(100))
plotecdf <- function(x){#
	plot(sort(x), (1:length(x))/length(x), ylab="x");#
	abline(0,1)#
}
plotecdf(runif(100))
plotecdf <- function(x){#
	plot(sort(x), (1:length(x))/length(x), xlab="x",#
	ylab=expression(F[n]));#
	abline(0,1)#
}
plotecdf(runif(100))
?mathtype
?text
plotecdf <- function(x){#
	plot(sort(x), (1:length(x))/length(x), xlab="x",#
	ylab=expression(F[n]),main="Distribution Funcntion");#
	abline(0,1)#
}
plotecdf(runif(100))
?plot
plot(sin(1:100), type="l")
plot(sin(1:100))
plotecdf <- function(x){#
	plot(sort(x), (1:length(x))/length(x), xlab="x",#
	ylab=expression(F[n]),main="Distribution Function");#
	abline(0,1)#
}
plot(sin(1:100))
plotecdf(runif(100))
y <- 1:10
plot(y,y^2)
plot
methods(plot)
plot.default
plotecdf <- function(x){#
	plot(sort(x), (1:length(x))/length(x), xlab=deparse(substitute(x)),#
	ylab=expression(F[n]),main="Distribution Function");#
	abline(0,1)#
}
plotecdf(runif(100))
plotecdf(rnorm(100))
plot(ecdf(runif(100)))
plot(ecdf(runif(10)))
plot(ecdf(runif(10)), pch="[")
n  <- 100
hist(runif(n))
?edit
x < data.entry()
data.entry(x)
?read
?read.data
?write
library(sintro)
?oddoneout
?sintro
search()
ls("package:sintro")
install.packages("sintro",repos="http://r-forge.r-project.org")
?OddOneOut
rnormplot <- function(n, ...){plot(rnorm(n))}#
runifplot <- function(n, ...){plot(runif(n))}#
#
OddOneOut(runs=5, ncols=3)
OddOneOut <- function(goodplot=rnormplot, badplot=runifplot, n=100, runs=10, nrows=4, ncols= 4, training=TRUE, ...){#
cat("One plot is out. Please click on the odd panel in the plot. Abort with <esc>.\n")#
cat("There are ",runs, "runs.\n")#
#
restab <-matrix(nrow=runs, ncol=4)#
colnames(restab) <- c("oddrow", "oddcol", "selrow", "selcol")#
nrplots <- nrows*ncols#
for (i in 1: runs){#
if (training) {oldpar <- par(mfrow=c(nrows,ncols))} else  {oldpar <- par(mfrow=c(nrows,ncols), ann=FALSE, xaxt="n", yaxt="n")}#
oddone <- sample(nrplots,1)-1#
for (j in 1:nrplots-1) {   #
	row <- (j %/% ncols) +1 #div#
	col <- (j %% ncols) +1  #mod#
	if (j==oddone) {badplot(n); badrow<- row; badcol <- col} else goodplot(n)#
#	print(c(j,row,col))#
}#
par(mfrow=c(1,1))#
plot.window(c(1,ncols),c(nrows,1)) # this is just a hack to get a convenient coordinate system#
locres <- locator(1)	#
restab[i,] <- c(badrow,badcol, round(locres$y), round(locres$x))#
#print(c(i, "odd:",oddone,badrow,badcol, locres$y, locres$x, round(locres$y), round(locres$x)))#
}#
restab#
}
rnormplot <- function(n, ...){plot(rnorm(n))}#
runifplot <- function(n, ...){plot(runif(n))}#
#
OddOneOut(runs=5, ncols=3)
OddOneOut
hist(runif(100))
h <- hist(runif(100))
h
h$counts
h$counts[4]
plot(h)
print(h)
h
summary(h)
summary(runif(100))
install.packages("sintro",repos="http://r-forge.r-project.org",type="source")
mehtods(text)
methods(text)
?text
x <- rnorm(400)
h <- hist(x)
h
h$sounts
h$counts
help(chisq.test)
chisq.test(h$counts)
x <- runif(400)#
h <- hist(x)#
chisq.test(h$counts)
?ks.test
ks.test(x)
ks.test(x,punif)
n <- 10#
x <- (1:n)/n#
a <- 0#
b <- 0.8#
err <- rnorm(n)#
y <- a + b *x +err
plot(x,y)
lm(y ~ x) # simple regression
abline(lm(y ~ x))
n <- 10#
x <- (1:n)/n#
a <- 0#
b <- 0.8#
err <- rnorm(n,sd=0.4)#
y <- a + b *x +err#
plot(x,y)#
lm(y~x)
lm(y~0 + x)
n <- 100#
x <- (1:n)/n#
a <- 0#
b <- 0.8#
err <- rnorm(n,sd=0.4)#
y <- a + b *x +err#
plot(x,y)
abline(lm(y~ 0 + x))
lm(y~ 0 + x)
n0 <- 10;x<-rep((1:n0)/n0,10)
x
a <- 0#
b <- 0.8#
err <- rnorm(n,sd=0.4)#
y <- a + b *x +err#
plot(x,y)#
lm(y~ 0 + x)#
abline(lm(y~ 0 + x))
plot(lm(y~ 0 + x))
err <- rnorm(n,sd=0.4)#
y <- a + b *x +0.8*x^2 +err#
plot(x,y)#
lm(y~ 0 + x)#
abline(lm(y~ 0 + x))#
plot(lm(y~ 0 + x))
print(lm(y~ 0 + x))
lmres <- lm(y~x)
lmres
summary(y)
summary(lmres)
plot(lmres)
str(stdres)
str(lmres)
names(lmres)
lmres$coefficients
plot(lmres$fitted.values,lmres$residuals)
n <- 100#
x <- (1:n)/n#
err <- rnorm(n,sd=0.4)#
yy <- 2.5*x +0.01* x^2 + err
plot(x,yy)
lmres <- lm(yy~x)
abline(lmres)
summary(lmres)
plot(lmres)
mehtods(text)
methods(text)
?prompt
OddOneOut
source('~/projects/rforge/sintro/pkg/R/OddOneOut.R', chdir = TRUE)
pwd()
getwd()
getwd()
skeleton(OddOneOut)
prompt(OddOneOut)
ls()
source("text_id.R")
prompt(text_id)
detach(sintro)
search()
ls()
plot(runif(10),runif(10))
rm(tex_id)
rm(text_id)
ls()
data()
library(MASS)
summary(hills)
str(hills)
hills[1,3]
hills$times
hills$time
lmres <- lm(runif(10)~ (1:10))
lmres <- lm(runif(10)~ rnorm(10))
plot(lmres)
plot
methods(plot)
?plot.ln
?plot.lm
plot(lmres, which=c(1,2))
par(mfrow=c(1,2))#
n <- 10#
a <- 1#
b <- 2#
err   <- rnorm(n,sd=1)#
x <- (1:10)/10#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(lmres,which=c(1,2))
ar(mfrow=c(2,1))#
n <- 100#
a <- 0#
b <- 1#
err   <- rnorm(n,sd=10)#
x <- (1:n)/n#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(lmres,which=c(1,2))
ar(mfrow=c(2,1))#
n <- 100#
a <- 0#
b <- 1#
err   <- rnorm(n,sd=10)#
x <- (1:n)/n#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(lmres1,which=c(1,2))
plot(x,y)
par(mfrow=c(2,1))#
n <- 100#
a <- 0#
b <- 1#
err   <- rnorm(n,sd=10)#
x <- (1:n)#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(x,y); abline(lmres1)
plot(lmres1,which=c(1,2))
plot(lmres1,which=c(1,2))
plot(x,y); abline(lmres1)
lm(y~0 + x)
par(mfrow=c(2,1))#
n <- 200#
a <- 0#
b <- 0.2#
err   <- rnorm(n,sd=10)#
x <- (1:n)#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(x,y); abline(lmres1)
par(mfrow=c(3,1))#
n <- 200#
a <- 0#
b <- 0.2#
err   <- rnorm(n,sd=10)#
x <- (1:n)#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(x,y); abline(lmres1)#
plot(lmres1,which=c(1,2))
n <- 100#
a <- 0#
b <- 0.2#
err   <- rnorm(n,sd=10)#
x <- (1:n)#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(x,y); abline(lmres1)#
plot(lmres1,which=c(1,2))
n <- 100#
a <- 0#
b <- 0.2#
err   <- rnorm(n,sd=40)#
x <- (1:n)#
#
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(x,y); abline(lmres1)#
plot(lmres1,which=c(1,2))
c <- 2#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
plot(x,y); abline(lmres1)#
plot(lmres1,which=c(1,2))
y <- a + b*x + err#
lmres1 <- lm(y~x)#
lmres1#
plot(x,y); abline(lmres1)#
plot(lmres1,which=c(1,2))
n <- 30#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
c <- 0.1#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)
plot(lmres2,which=c(1,2))
n <- 30#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=10)#
x <- (1:n)#
c <- 0.1#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
n <- 30#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=10)#
x <- (1:n)#
c <- 0.01#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
n <- 30#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
c <- 0.01#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
n <- 300#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
c <- 0.01#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
n <- 100#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
c <- 0.01#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
n <- 60#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
c <- 0.01#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
n <- 40#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
c <- 0.01#
y <- a + b*x + c*x^2+ err#
lmres2 <- lm(y~x)#
lmres2#
plot(x,y); abline(lmres2)#
plot(lmres2,which=c(1,2))
n <- 1000#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
y <- exp(a+ b*x+err)#
lmres3 <- lm(y~x)#
lmres3#
plot(x,y); abline(lmres3)
plot(lmres3,which=c(1,2))
n <- 500#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
y <- exp(a+ b*x+err)#
lmres3 <- lm(y~x)#
lmres3#
plot(x,y); abline(lmres3)#
plot(lmres3,which=c(1,2))
n <- 100#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)#
y <- exp(a+ b*x+err)#
lmres3 <- lm(y~x)#
lmres3#
plot(x,y); abline(lmres3)#
plot(lmres3,which=c(1,2))
n <- 100#
a <- 0.5#
b <- -0.1#
err   <- rnorm(n,sd=1)#
x <- (1:n)/n#
y <- exp(a+ b*x+err)#
lmres3 <- lm(y~x)#
lmres3#
plot(x,y); abline(lmres3)#
plot(lmres3,which=c(1,2))
n <- 100#
a <- 0.5#
b <- -0.01#
err   <- rnorm(n,sd=1)#
x <- (1:n)/n#
y <- exp(a+ b*x+err)#
lmres3 <- lm(y~x)#
lmres3#
plot(x,y); abline(lmres3)#
plot(lmres3,which=c(1,2))
n <- 100#
a <- 0.1#
b <- 5E-4#
err   <- rnorm(n,sd=0.3)#
x <- 10*(1:n)/n#
y <- exp(a+ b*x+err)#
lmres3 <- lm(y~x)#
lmres3#
plot(x,y); abline(lmres3)
plot(lmres3,which=c(1,2))
n <- 100#
a <- 1#
b <- 2#
err   <- rnorm(n,sd=0.5)#
x <- 10*(1:n)/n#
y <- a+ b*x+x*err#
lmres4 <- lm(y~x)#
lmres4#
plot(x,y); abline(lmres4)
plot(lmres4,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)/n#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)/n#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)/n#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)/n#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
n <- 100#
a <- 10#
b <- 100#
c <- 0.01#
err <- rnorm(n,sd=1)#
#
x <- (1:n)#
y<- a+b*cos(c*x)+err#
lmres5 <- lm(y~x)#
lmres5#
plot(x,y);abline(lmres5)#
plot(lmres5,which=c(1,2))
data.edti(hills)
data.edit(hills)
edit(hills)
data()
edit(hills)
?write.table
methods(plot)
